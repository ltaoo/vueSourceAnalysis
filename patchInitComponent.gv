digraph G {
    label="initComponent(vnode, insertedVnodeQueue)"
    pendingInsertIsDef [
        label="isDef(vnode.data.pendingInsert)"
        shape=diamond
    ]
    push [
        label="insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert)"
    ]
    pendingInsertIsDef -> push [label="yes"]
    setPendingInsertBeNull [
        label="vnode.data.pendingInsert = null"
    ]
    push -> setPendingInsertBeNull
    setElm [
        label="vnode.elm = vnode.componentInstance.$el"
    ]
    pendingInsertIsDef -> setElm
    setPendingInsertBeNull -> setElm
    nodeIsPatchable [
        label="isPatchable(vnode)"
        shape=diamond
    ]
    setElm -> nodeIsPatchable
    invokeCreateHooks [
        label="invokeCreateHooks(vnode, insertedVnodeQueue)"
    ]
    nodeIsPatchable -> invokeCreateHooks [label="yes"]
    setScope [
        label="setScope(vnode)"
    ]
    invokeCreateHooks -> setScope
    registerRef [
        label="registerRef(vnode)"
    ]
    nodeIsPatchable -> registerRef [label="no"]
    pushVnode [
        label="insertedVnodeQueue.push(vnode)"
    ]
    registerRef -> pushVnode
}