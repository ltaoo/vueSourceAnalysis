digraph G {
    graph [
        label="core/instance/init.js"
        fontcolor=blue
    ]

    start [
        label="Vue.prototype._init = function (options) {"
    ]

    varVm [
        label="const vm = this"
    ]
    start -> varVm
    setUid [
        label="vm._uid = uid++"
        fontcolor=red
    ]
    varVm -> setUid

    varTag [
        label="let startTag, endTag"
    ]
    setUid -> varTag

    notProduction [
        label="process.env.NODE_ENV !== 'production' && config.performance && mark"
        shape=diamond
    ]

    varTag -> notProduction

    resetStart [
        label="startTag = `vue-perf-start:${vm._uid}`"
    ]
    notProduction -> resetStart [label="yes" style=dotted]
    resetEnd [
        label="endTag = `vue-perf-end:${vm._uid}`"
    ]
    resetStart -> resetEnd
    mark [
        label="mark(startTag)"
    ]
    resetEnd -> mark

    setIsVue [
        label="vm._isVue = true"
        fontcolor=red
    ]
    notProduction -> setIsVue
    mark -> setIsVue

    isComponent [
        label="options && options._isComponent"
        shape=diamond
    ]
    setIsVue -> isComponent

    isComponent -> initInternalComponent [label="yes"]
    setOptions [
        label="vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm)"
    ]
    isComponent -> setOptions [label="no"]
    notProduction2 [
        label="process.env.NODE_ENV !== 'production'"
        shape=diamond
    ]
    initInternalComponent -> notProduction2
    setOptions -> notProduction2
    initProxy [
        label="initProxy(vm)"
    ]
    notProduction2 -> initProxy [label="yes" style=dotted]
    setRenderProxy [
        label="vm._renderProxy = vm"
        fontcolor=red
    ]
    notProduction2 -> setRenderProxy [label="no"]
    setSelf [
        label="vm._self = vm"
        fontcolor=red
    ]
    initProxy -> setSelf
    setRenderProxy -> setSelf

    initLifecycle [
        label="initLifecycle(vm)"
    ]
    setSelf -> initLifecycle

    initEvents [
        label="initEvents(vm)"
    ]
    initLifecycle -> initEvents

    initRender [
        label="initRender(vm)"
    ]
    initEvents -> initRender
    callBeforeCreateHook [
        label="callHook(vm, 'beforeCreate')"
        color=green
        fontcolor=green
    ]
    initRender -> callBeforeCreateHook

    initInjections [
        label="initInjections(vm)"
    ]
    callBeforeCreateHook -> initInjections

    initState [
        label="initState(vm)"
    ]
    initInjections -> initState
    initProvide [
        label="initProvide(vm)"
    ]
    initState -> initProvide
    callCreatedHook [
        label="callHook(vm, 'created')"
        color=green
        fontcolor=green
    ]
    initProvide -> callCreatedHook

    notProduction3 [
        label="process.env.NODE_ENV !== 'production' && config.performance && mark"
        shape=diamond
    ]

    callCreatedHook -> notProduction3

    setName [
        label="vm._name = formatComponentName(vm, false)"
        fontcolor=red
    ]
    notProduction3 -> setName [label="yes" style=dotted]
    markEnd [
        label="mark(endTag)"
    ]
    setName -> markEnd
    measure [
        label="measure(`vue ${vm._name} init`, startTag, endTag)"
    ]
    markEnd -> measure

    hasEl [
        label="vm.$options.el"
        shape=diamond
    ]
    notProduction3 -> hasEl
    measure -> hasEl

    mount [
        label="vm.$mount(vm.$options.el)"
    ]

    hasEl -> mount [label="yes"]
}