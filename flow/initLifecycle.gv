digraph G {
    graph[
        label="core/instance/lifecycle.js"
        fontcolor=blue
    ]

    start [
        label="function initLifecycle(vm) {"
    ]
    varOptions [
        label="const options = vm.$options"
    ]
    start -> varOptions
    varParent [
        label="let parent = options.parent"
    ]
    varOptions -> varParent
    hasParent [
        label="parent && !options.abstract"
        shape=diamond
    ]
    varParent -> hasParent
    hasParent -> while [label="yes"]
    subgraph cluster_while {
        label=""
        graph [style=dotted]
        while [
            label="while (parent.$options.abstract && parent.$parent) {"
        ]
        resetParent [
            label="parent = parent.$parent"
        ]
        while -> resetParent
    }

    pushVm [
        label="parent.$children.push(vm)"
    ]
    resetParent -> pushVm
    setParent [
        label="vm.$parent = parent"
        fontcolor=red
    ]
    pushVm -> setParent
    hasParent -> setParent
    setRoot [
        label="vm.$root = parent ? parent.$root : vm"
        fontcolor=red
    ]
    setParent -> setRoot
    initChildren [
        label="vm.$children = []"
        fontcolor=red
    ]
    setRoot -> initChildren
    initRefs [
        label="vm.$refs = {}"
        fontcolor=red
    ]
    initChildren -> initRefs
    initWatcher [
        label="vm._watcher = null"
        fontcolor=red
    ]
    initRefs -> initWatcher
    initInactive [
        label="vm._inactive = null"
        fontcolor=red
    ]
    initWatcher -> initInactive
    initDirectInactive [
        label="vm._directInactive = false"
        fontcolor=red
    ]
    initInactive -> initDirectInactive
    initIsMounted [
        label="vm._isMounted = false"
        fontcolor=red
    ]
    initDirectInactive -> initIsMounted
    initIsDestroyed [
        label="vm._isDestroyed = false"
        fontcolor=red
    ]
    initIsMounted -> initIsDestroyed
    initIsBeingDestroyed [
        label="vm._isBeingDestroyed = false"
        fontcolor=red
    ]
    initIsDestroyed -> initIsBeingDestroyed
}