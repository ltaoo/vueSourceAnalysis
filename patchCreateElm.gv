digraph G {
    label="createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested)"
    setIsRoot [
        label="vnode.isRootInsert = !nested"
    ]
    hasCreate [
        label="createComponent(vnode, insertedVnodeQueue, parentElm, refElm)"
        shape=diamond
    ]
    setIsRoot -> hasCreate
    hasCreate -> return [label="yes"]
    varData [
        label="const data = vnode.data"
    ]
    hasCreate -> varData
    varChildren [
        label="const children = vnode.children"
    ]
    varData -> varChildren
    varTag [
        label="const tag = vnode.tag"
    ]
    varChildren -> varTag
    tagIsDef [
        label="isDef(tag)"
        shape=diamond
    ]
    varTag -> tagIsDef
    notProduction [
        label="process.env.NODE_ENV !== 'production'"
        shape=diamond
    ]
    tagIsDef -> notProduction [label="yes"]
    doSomething [
        label="todo..."
    ]
    notProduction -> doSomething [label="yes"]
    ns [
        label="vnode.ns"
        shape=diamond
    ]
    doSomething -> ns
    notProduction -> ns
    setElm0 [
        label="vnode.elm = nodeOps.createElementNS(vnode.ns, tag)"
    ]
    setElm1 [
        label="vnode.elm = nodeOps.createElement(tag, vnode)"
    ]
    ns -> setElm0 [label="yes"]
    ns -> setElm1 [label="no"]

    setScope [
        label="setScope(vnode)"
    ]
    setElm0 -> setScope
    setElm1 -> setScope

    weex [
        label="window.__WEEX__"
        shape=diamond
    ]

    setScope -> weex
    createChildren [
        label="createChildren(vnode, children, insertedVnodeQueue)"
    ]
    weex -> createChildren [label="no"]
    dataIsDef [
        label="isDef(data)"
        shape=diamond
    ]
    createChildren -> dataIsDef
    invokeCreateHooks [
        label="invokeCreateHooks(vnode, insertedVnodeQueue)"
    ]
    dataIsDef -> invokeCreateHooks [label="yes"]
    insert [
        label="insert(parentElm, vnode.elm, refElm)"
    ]
    dataIsDef -> insert
    invokeCreateHooks -> insert

    notProduction1 [
        label="process.env.NODE_ENV !== 'production'"
        shape=diamond
    ]

    insert -> notProduction1

    vnodeIsComment [
        label="isTrue(vnode.isComment)"
        shape=diamond
    ]
    tagIsDef -> vnodeIsComment [label="no"]
    setElm2 [
        label="vnode.elm = nodeOps.createComment(vnode.text)"
    ]
    vnodeIsComment -> setElm2 [label="yes"]
    insert1 [
        label="insert(parentElm, vnode.elm, refElm)"
    ]
    setElm2 -> insert1
    setElm3 [
        label="vnode.elm = nodeOps.createTextNode(vnode.text)"
    ]
    insert2 [
        label="insert(parentElm, vnode.elm, refElm)"
    ]
    vnodeIsComment -> setElm3 [label="no"]
    setElm3 -> insert2
}