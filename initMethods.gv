digraph G {
    graph [
        label="core/instance/state.js"
        fontcolor=blue
    ]

    start [
        label="initMethods(vm, methods)"
    ]

    varProps [
        label="const props = vm.$options.props"
    ]
    start -> varProps
    walkMethods [
        label="for(const key in methods) {"
    ]
    varProps -> walkMethods
    subgraph cluster_walk {
        graph[
            label=""
            style=dotted
        ]
        notProduction [
            label="process.env.NODE_ENV !== 'production'"
            shape=diamond
        ]
        walkMethods -> notProduction
        isNull [
            label="methods[key] === null"
            shape=diamond
        ]
        notProduction -> isNull [label="yes"]
        warn0 [
            label="warn()"
        ]
        isNull -> warn0 [label="yes"]
        methodIsProp [
            label="props && hasOwn(props, key)"
            shape=diamond
        ]
        isNull -> methodIsProp
        warn0 -> methodIsProp
        warn1 [
            label="warn()"
        ]
        methodIsProp -> warn1 [label="yes"]
        isReserved [
            label="(key in vm) && isReserved(key)"
            shape=diamond
        ]
        methodIsProp -> isReserved
        warn1 -> isReserved
        warn2 [
            label="warn()"
        ]
        isReserved -> warn2 [label="yes"]
        bindMethod [
            label="vm[key] = methods[key] == null ? noop : bind(methods[key], vm)"
        ]
        warn2 -> bindMethod
        isReserved -> bindMethod
        notProduction -> bindMethod
    }
}